;; Skeleton des headers protege
(define-skeleton insert-protect-header
  "Inserts a define to protect the header file."
  ""
  '(setq str (file-name-sans-extension
          (file-name-nondirectory (buffer-file-name))))
  "#ifndef __"(upcase str)"_H__\n"
  "# define __"(upcase str)"_H__\n"
  "\n"
  "\n"
  "\n"
  "#endif /* !__"(upcase str)"_H__ */\n")
 
;; Skeleton des Makefiles
(define-skeleton create-makefile
  "Create a Makefile."
  "\n"
  "\# Indiquer dans quels dossiers sont vos sources.\n"
  "SRCDIR=	./sources/corewar/main/\n"
  "DIRDSP=	./source/corewar/displaylib/\n"
  "\n"
  ""
  "\# Nom du binaire et source_projet.\n"
  "NAME=		corewar\n"
  "SRC=		$(SRCDIR)main.c\n"
  "\n"
  "\# Nom de la lib et source_lib.\n"
  "LIBDSP=	libdsp2.a\n"
  "SRCDSP=	$(DIRDSP)my_printf.c\n"
  "\n"
  "\# Remplacer lib par votre dossier, et -my- par votre lib, ex: pour libdsp.a -dsp-.\n"
  "LIB=		-L. -ldsp2\n"
  "\n"
  "CFLAGS+=	-ansi -pedantic -Wextra -Werror -Wall\n"
  "CC=		cc\n"
  "OBJ=		$(SRC:.c=.o)\n"
  "OBJDSP=	$(SRCDSP:.c=.o)\n"
  "\n"
  "RM=		rm -f\n"
  "\n"
  "\# commentaire du process\n"
  "ECHO=		echo -e\n"
  "\n"
  "all:		$(LIBDSP) $(NAME)\n"
  "$(NAME):	$(OBJ)\n"
  "		@$(CC) $(INC) $(CFLAGS) -o $(NAME) $(OBJ) $(LIB)\n"
  "		@$(ECHO) '\\033[0;32m> Compiled\\033[0m'\n"
  "\n"
  "$(LIBDSP):	$(OBJDSP)\n"
  "		ar rc $(LIBDSP) $(OBJDSP)\n"
  "		ranlib ($(LIBDSP)\n"
  "\n"
  "clean:	\n"
  "		-@$(RM) ./sources/*/*.o\n"
  "		-@$(RM) *~\n"
  "		-@$(RM) \\#*\#\n"
  "		@$(ECHO) '\\033[0;35m> Directory cleaned\\033[0m'\n"
  "\n"
  "fclean:	clean\n"
  "		-@$(RM) $(NAME)\n"
  "		@$(ECHO) '\\033[0;35m> Remove executable\\033[0m'\n"
  "\n"
  "re:		fclean all\n"
  "\n"
  ".c.o:	\n"
  "		$(CC) $(INC) $(CFLAGS) -o $@ -c $<\n")
